name: deploy.webhook
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
env:
  AWS_REGION: us-west-2
jobs:
  check:
    name: Check if ready
    runs-on: ubuntu-latest
    outputs:
      ready: ${{ steps.aws.outputs.ready }}
    steps:
      - id: aws
        name: Check AWS Credentials
        run: |
          if [ "$AWS_ACCESS_KEY_ID" == "" ]; then
            echo "missing secret: AWS_ACCESS_KEY_ID"
            echo ::set-output name=ready::false
          else
            echo ::set-output name=ready::true
          fi
          if [ "$AWS_SECRET_ACCESS_KEY" == "" ]; then
          echo "missing secret: AWS_SECRET_ACCESS_KEY"
            echo ::set-output name=ready::false
          else
            echo ::set-output name=ready::true
          fi
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    needs: check
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        if: ${{ needs.check.outputs.ready }}
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Add profile credentials to ~/.aws/credentials
        if: ${{ needs.check.outputs.ready }}
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }} --profile default
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }} --profile default
          aws configure set aws_region ${{ env.AWS_REGION }} --profile default
      - name: Terraform Format
        id: fmt
        run: terraform fmt -check -diff
        if: ${{ needs.check.outputs.ready }}
      - name: Terraform Init
        id: init
        run: terraform init
        if: ${{ needs.check.outputs.ready }}
      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request' && needs.check.outputs.ready
        run: terraform plan -input=false -no-color
        continue-on-error: true
        env:
          TF_VAR_indent_webhook_secret: ${{ secrets.INDENT_WEBHOOK_SECRET }}
          TF_VAR_tailscale_tailnet: ${{ secrets.TAILSCALE_TAILNET }}
          TF_VAR_tailscale_api_key: ${{ secrets.TAILSCALE_API_KEY }}
      - uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request' && needs.check.outputs.ready
        env:
          PLAN: |-
            terraform
            ${{ steps.plan.outputs.stdout }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            <details><summary>Show Plan</summary>
            \`\`\`${process.env.PLAN}\`\`\`
            </details>
            *Actor: @${{ github.actor }}, Event: \`${{ github.event_name }}\`*`;
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure' && needs.check.outputs.ready
        run: exit 1
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push' && needs.check.outputs.ready
        run: terraform apply -input=false -auto-approve
        env:
          TF_VAR_indent_webhook_secret: ${{ secrets.INDENT_WEBHOOK_SECRET }}
          TF_VAR_tailscale_tailnet: ${{ secrets.TAILSCALE_TAILNET }}
          TF_VAR_tailscale_api_key: ${{ secrets.TAILSCALE_API_KEY }}
      - name: Terraform Output
        if: github.ref == 'refs/heads/main' && github.event_name == 'push' && needs.check.outputs.ready
        run: terraform output
        env:
          TF_VAR_indent_webhook_secret: ${{ secrets.INDENT_WEBHOOK_SECRET }}
          TF_VAR_example_api_key: ${{ secrets.EXAMPLE_API_KEY}}
